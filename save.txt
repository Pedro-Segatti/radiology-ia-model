import os

import numpy as np
import tensorflow as tf

from models.radiology_model import RadiologyModel
from data.predict import Predict
from train.train import Train
from train.validate import ValidateTrain

radiology_model = RadiologyModel((128, 128, 3), 2)
radiology_model.build_model()
radiology_model.compile_model(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
radiology_model = radiology_model.get_model()

train = Train(radiology_model, "C:\\Users\\Pedro\\Documents\\GitHub\\radiology-ia-model\\tests\\data", (128, 128, 3), 0.2)
train.train_model()
validate = ValidateTrain(radiology_model, "C:\\Users\\Pedro\\Documents\\GitHub\\radiology-ia-model\\tests\\data", "C:\\Users\\Pedro\\Documents\\GitHub\\radiology-ia-model\\tests\\saved_models", (128, 128, 3))
validate.validate_model()

predict = Predict(radiology_model, "C:\\Users\\Pedro\\Documents\\GitHub\\radiology-ia-model\\tests\\test3.png", (128, 128, 3))
predicted_class, predicted_class_name, predicted_probability, predictions = predict.predict()

# Validar se é normal ou com problema com base na classe e probabilidade
if predicted_class_name == "normal" and predicted_probability > 0.5:
    print("A imagem é normal.")
elif predicted_class_name == "compression" and predicted_probability > 0.5:
    print("A imagem tem problema.")
else:
    print("O modelo não tem certeza sobre a classificação. Probabilidade abaixo de 50%.")